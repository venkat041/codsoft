# -*- coding: utf-8 -*-
"""codsoft.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tT23-uhBVYhNbcL9O2mWv5PGcv1Po1KZ
"""

# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.preprocessing import LabelEncoder

# Step 1: Load the Titanic dataset (ensure the dataset is in the current directory)
data = pd.read_csv('/content/Titanic-Dataset.csv')

# Step 2: Data Preprocessing
# Handle missing values
data['Age'].fillna(data['Age'].median(), inplace=True)
data['Embarked'].fillna(data['Embarked'].mode()[0], inplace=True)
data['Fare'].fillna(data['Fare'].median(), inplace=True)

# Drop columns that are not useful for prediction (Name, Ticket, Cabin)
data = data.drop(['Name', 'Ticket', 'Cabin'], axis=1)

# Encode categorical variables (Sex and Embarked)
le_sex = LabelEncoder()
data['Sex'] = le_sex.fit_transform(data['Sex'])

le_embarked = LabelEncoder()
data['Embarked'] = le_embarked.fit_transform(data['Embarked'])

# Step 3: Split the data into features (X) and target (y)
X = data.drop(['Survived', 'PassengerId'], axis=1)
y = data['Survived']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 4: Train the model (Random Forest Classifier)
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 5: Make predictions
y_pred = model.predict(X_test)

# Step 6: Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy * 100:.2f}%')